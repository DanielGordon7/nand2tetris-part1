// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl
/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 * Outputs the value of the memory location specified by the address input.
 * If (load == 1), sets the memory location specified by the address input
 * to the value of the in input.
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 */ 
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    // solution:
    // artificially split RAM16 into 2 parts to use DMux4Way and Mux4Way16. Use 13th and 14th bit of address
    // combine the a,b output from DMux4Way with and OR gate to if a,b=1,0 OR a,b=0,1 we select RAM16k
    // can therefore "reuse" 14th bit of address in RAM16k
    // finally, in Mux4Way16 use a=b=outRAM since they belong to same chip

    PARTS:
    DMux4Way (in=load, sel=address[13..14], a=loadRAM1, b=loadRAM2, c=loadScr, d=loadKbd);

    Or     (a=loadRAM1, b=loadRAM2, out=loadRAM);
    RAM16K (in=in, load=loadRAM, address=address[0..13], out=outRAM);

    Screen (in=in, load=loadScr, address=address[0..12], out=outScr);

    Keyboard (out=outKbd);

    Mux4Way16 (a=outRAM, b=outRAM, c=outScr, d=outKbd, sel=address[13..14], out=out);

}
